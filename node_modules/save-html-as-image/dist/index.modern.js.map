{"version":3,"file":"index.modern.js","sources":["../src/utils.js","../src/utils-image-options.js","../src/index.js"],"sourcesContent":["/* jslint browser */\n/* global window */\n/* global document */\n\nimport { svgAsPngUri } from 'save-svg-as-png';\nimport { saveAs } from 'file-saver';\n\nconst DEFAULT_OPTIONS = {\n  filename: 'Image',\n  forceFixText: false,\n  printDate: true\n};\n\n/**\n * Set computed style in static style of svg element\n * @param {Document} el\n */\nconst fixColorSvg = (element) => {\n  const { color } = window.getComputedStyle(element);\n\n  element.style.color = color;\n};\n\n/**\n * Set computed style in static style of svg element\n * @param {Document} el\n */\nconst fixSizeSvg = (element) => {\n  const styles = window.getComputedStyle(element);\n\n  element.style.width = styles.width;\n  element.style.height = styles.height;\n};\n\n/**\n * Fix all text with the class \"fixed-text\"\n * @param {Document} node\n */\nconst fixText = (node) => {\n  hardFixText(node, ['.fixed-text']);\n};\n\n/**\n *\n * @param {Document} node\n * @param {Array} seek\n */\nconst hardFixText = (\n  node,\n  seek = [\n    'b',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'i',\n    'mark',\n    'p',\n    'small',\n    'strong'\n  ]\n) => {\n  const allTexts = node.querySelectorAll(seek);\n\n  for (const text of allTexts) {\n    text.style.fontFamily = window.getComputedStyle(text).fontFamily;\n    text.style.fontSize = window.getComputedStyle(text).fontSize;\n    text.style.fontWeight = window.getComputedStyle(text).fontWeight;\n    text.style.width = window.getComputedStyle(text).width;\n  }\n};\n\n/**\n *\n * Exported Functions\n *\n */\n\n/**\n *\n * @param {Document} svgs\n */\nconst replaceFontAwesomeIconsWithImages = async (node) => {\n  const svgs = node.querySelectorAll('svg');\n\n  const images = [];\n\n  for (const item of svgs) {\n    const itemAttribute = item.getAttribute('data-icon');\n    const cache = images.find((img) => img.dataIcon === itemAttribute);\n\n    const imgElement = document.createElement('img');\n\n    if (cache) {\n      imgElement.src = cache.uri;\n    } else {\n      /* eslint-disable no-await-in-loop */\n\n      const uri = await svgAsPngUri(item, 'icon.png');\n      imgElement.src = uri;\n      images.push({ dataIcon: itemAttribute, uri });\n\n      /* eslint-enable no-await-in-loop */\n    }\n\n    imgElement.dataset.icon = itemAttribute;\n    imgElement.width = item.clientWidth;\n    imgElement.height = item.clientHeight;\n\n    item.replaceWith(imgElement);\n  }\n};\n\n/**\n *\n * @param {Document} node\n * @param {Boolean} forceFixText\n */\nconst applyFixs = (node, forceFixText = false) => {\n  const svgs = node.querySelectorAll('svg');\n\n  fixText(node);\n\n  if (forceFixText) {\n    hardFixText(node);\n  }\n\n  for (const element of svgs) {\n    fixColorSvg(element);\n    fixSizeSvg(element);\n  }\n};\n\n/**\n * Merge options\n *\n * @param {*} userOptions\n */\nconst getOptions = (userOptions) => {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...userOptions\n  };\n};\n\n/**\n * Get File name\n * @param {*} options\n */\nconst getFileName = (options) => {\n  if (options.printDate) {\n    const date = new Date().toDateString();\n\n    return `${options.filename} (${date})`;\n  }\n\n  return options.filename || 'Image';\n};\n\nconst removeElements = (node) => {\n  const els = node.querySelectorAll(['.remove-when-downloading']);\n\n  for (const element of els) {\n    element.setAttribute(\n      'original_display',\n      window.getComputedStyle(element).display\n    );\n    element.style.display = 'none';\n  }\n};\n\nconst recoveryElements = (node) => {\n  const els = node.querySelectorAll(['.remove-when-downloading']);\n\n  for (const element of els) {\n    element.style.display = element.getAttribute('original_display');\n  }\n};\n\n/**\n *\n * @param {*} node\n */\nexport const filterElements = (node) => {\n  return node.className !== 'hide-when-downloading';\n};\n\n/**\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} callback\n * @param {*} extension\n */\nexport const scaffolding = async (\n  node,\n  userOptions,\n  callback,\n  extension = 'png'\n) => {\n  const options = getOptions(userOptions || {});\n  let canvas = null;\n\n  applyFixs(node, options.forceFixText);\n\n  removeElements(node);\n\n  try {\n    canvas = await callback();\n  } catch {\n    /* Litte hack because not working on safari */\n    await replaceFontAwesomeIconsWithImages(node);\n    await callback();\n\n    canvas = await callback();\n  }\n\n  recoveryElements(node);\n\n  saveAs(canvas, `${getFileName(options)}.${extension}`);\n};\n","/* global window */\n\n/**\n *\n * @param {*} node\n * @param {*} opt\n * @returns\n */\nconst getSizes = (node, opt) => {\n  if (opt.width && opt.height) {\n    const { width, height } = opt;\n\n    return { width, height };\n  }\n\n  const { width, height } = window.getComputedStyle(node);\n\n  return {\n    width: Number.parseInt(width.replace('px', ''), 10) + 4,\n    height: Number.parseInt(height.replace('px', ''), 10) + 4\n  };\n};\n\n/**\n *\n * @param {*} node\n * @param {*} opt\n * @param {*} format\n * @returns\n */\nexport const getImageOptions = (node, opt, format = 'png') => {\n  const { backgroundColor, quality, pixelRatio, style } = opt;\n  let currentOptions = {\n    ...getSizes(node, opt),\n    pixelRatio: 1\n  };\n\n  // Style\n  if (style) {\n    currentOptions = {\n      ...currentOptions,\n      style\n    };\n  }\n\n  // Background\n  if (backgroundColor) {\n    currentOptions = {\n      ...currentOptions,\n      backgroundColor\n    };\n  }\n\n  // Pixel Ratio\n  if (pixelRatio && pixelRatio > 0) {\n    currentOptions = {\n      ...currentOptions,\n      pixelRatio\n    };\n  }\n\n  // Quality\n  if (quality && format.includes('jpeg')) {\n    const q = quality >= 0 && quality <= 1 ? quality : 1;\n\n    currentOptions = {\n      ...currentOptions,\n      quality: q\n    };\n  }\n\n  return currentOptions || {};\n};\n","/* jslint browser */\n\nimport { toPng, toJpeg } from 'html-to-image';\n\nimport { filterElements, scaffolding } from './utils';\nimport { getImageOptions } from './utils-image-options';\n\n/**\n *  Save html as Jpeg Image\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} imageOptions\n */\nexport const saveAsJpeg = async (node, userOptions = {}, imageOptions = {}) => {\n  const callback = () =>\n    toJpeg(node, {\n      filter: filterElements,\n      ...getImageOptions(node, imageOptions, 'jpeg')\n    });\n\n  await scaffolding(node, userOptions, callback, 'jpeg');\n};\n\n/**\n * Save html as png image\n *\n * @param {*} node\n * @param {*} userOptions\n * @param {*} imageOptions\n */\nexport const saveAsPng = async (node, userOptions = {}, imageOptions = {}) => {\n  const callback = () =>\n    toPng(node, {\n      filter: filterElements,\n      ...getImageOptions(node, imageOptions, 'png')\n    });\n\n  await scaffolding(node, userOptions, callback, 'png');\n};\n\n/**\n * @deprecated use saveAsPng\n * Will removed in version 1.6\n * Download the DOM node to png file\n *\n * @param {Document} node\n * @param {String} nameOfPage\n * @param {Boolean} hardFixText\n */\nexport const downloadDOM = async (\n  node,\n  nameOfPage = 'Image',\n  forceFixText = false\n) => {\n  await saveAsPng(node, { forceFixText, filename: nameOfPage });\n};\n"],"names":["Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","DEFAULT_OPTIONS","filename","forceFixText","printDate","fixColorSvg","element","window","getComputedStyle","style","color","fixSizeSvg","styles","width","height","hardFixText","node","seek","querySelectorAll","text","fontFamily","fontSize","fontWeight","filterElements","className","scaffolding","userOptions","extension","display","getAttribute","recoveryElements","saveAs","canvas","options","date","Date","toDateString","getFileName","getOptions","svgs","fixText","applyFixs","setAttribute","removeElements","body","recover","images","target","check","_iteratorSymbol","step","reject","_cycle","next","done","_fixup","TypeError","values","i","length","push","array","_forTo","item","imgElement","dataset","icon","itemAttribute","clientWidth","clientHeight","replaceWith","cache","find","img","dataIcon","document","createElement","svgAsPngUri","uri","src","replaceFontAwesomeIconsWithImages","getImageOptions","opt","format","backgroundColor","quality","pixelRatio","currentOptions","Number","parseInt","replace","getSizes","includes","saveAsJpeg","imageOptions","toJpeg","filter","saveAsPng","toPng","downloadDOM","nameOfPage"],"mappings":"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"}